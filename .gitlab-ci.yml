stages:
  - build
  - test

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  # Add image registry info
  IMAGE_TAG: $CI_REGISTRY_IMAGE/ml-service:$CI_COMMIT_REF_SLUG

services:
  - docker:dind

build-ml-service:
  image: docker:latest
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG -f ml_service/Dockerfile .
    - docker push $IMAGE_TAG


test-ml-service:
  image: docker:latest
  stage: test
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_TAG
    - docker run -d --name ml-test -p 8000:8000 $IMAGE_TAG
    - sleep 10  # give it time to start
    - apk add --no-cache curl
    # - |
    #   # Debug container info
    #   echo "Container info:"
    #   docker inspect ml-test
      
    #   # # Get container IP address
    #   # CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ml-test)
    #   # echo "Container IP: $CONTAINER_IP"
      
    #   # # Test using both container IP and docker network
    #   # echo "Testing with container IP..."
    #   # curl --fail -v http://$CONTAINER_IP:8000/health || echo "IP-based test failed"
      
    #   echo "Testing with Docker network..."
    #   curl --fail -v http://ml-test:8000/health || echo "Hostname-based test failed"
      
    #   # echo "Testing with Docker host..."
    #   # curl --fail -v http://docker:8000/health || echo "Docker host test failed"
      
    #   # echo "Testing with localhost..."
    #   # curl --fail -v http://localhost:8000/health || echo "Localhost test failed" 
    - for i in {1..20}; do
      if curl --fail http://ml-test:8000/health; then
        echo "Service is up!"
        break
      else
        echo "Waiting for service to start..."
        sleep 60
      fi
     done

    - docker logs ml-test
    - docker stop ml-test