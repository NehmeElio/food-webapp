stages:
  - build
  - test

# Build the Docker image
build_ml:
  stage: build
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  script:
    - docker build -t my_ml_service -f ml_service/Dockerfile .
    - docker save my_ml_service -o my_ml_service.tar  # Save the image to a tarball
  artifacts:
    paths:
      - my_ml_service.tar  # Pass the image tarball as an artifact
    expire_in: 1 hour      # Optionally, set expiration for the artifact
  tags:
    - docker

# Run tests using the saved Docker image
test_ml:
  stage: test
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  dependencies:
    - build_ml  # Ensure that the test stage depends on the build stage
  script:
    - docker load -i my_ml_service.tar  # Load the Docker image from the tarball
    - docker run --rm my_ml_service pytest > result.log; tail -n 10 result.log
  tags:
    - docker
